services:
  postgres:
    image: postgres:15
    container_name: ${PG_CONTAINER}
    environment:
      POSTGRES_DB: ${PG_DB}
      POSTGRES_USER: ${PG_USER}
      POSTGRES_PASSWORD: ${PG_PASSWORD}
    ports:
      - "${PG_PORT}:${PG_PORT}"
    networks:
      - monitoring
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB" ]
      interval: 5s
      timeout: 5s
      retries: 10

  adminer:
    image: adminer:latest
    container_name: ${ADMINER_CONTAINER}
    ports:
      - "${ADMINER_PORT}:${HTTP_PORT}"
    depends_on:
      postgres:
        condition: service_healthy

  prometheus:
    image: prom/prometheus:latest
    container_name: ${PROMETHEUS_CONTAINER}
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --storage.tsdb.retention.time=15d
    volumes:
      - ./observability/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    ports:
      - "${PROMETHEUS_PORT}:${PROMETHEUS_PORT}"
    extra_hosts:
      - "${PROMETHEUS_EXTRA_HOST}"
    networks: [ monitoring ]

  grafana:
    image: grafana/grafana:10.4.5
    container_name: ${GRAFANA_CONTAINER}
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_SEC_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_SEC_PASSWORD}
      - GF_USERS_DEFAULT_THEME=dark
    ports:
      - "3000:3000"
    networks: [ monitoring ]
    depends_on: [ prometheus ] #, loki, tempo ]
    volumes:
      - grafana_data:/var/lib/grafana
      - ./observability/grafana/provisioning:/etc/grafana/provisioning:ro
      - ./observability/grafana/dashboards:/var/lib/grafana/dashboards:ro

volumes:
  pgdata:
  prometheus_data:
  grafana_data:

networks:
  monitoring:
    driver: bridge